openapi: 3.0.3
info:
  title: FarmStall API
  version: v1
servers:
  - url: https://farmstall.designapis.com/v1
components:
  securitySchemes:
    MyUserToken:
      type: apiKey
      in: header
      name: Authorization
paths: 
  /reviews:
    get:
      description: Get a bunch of reviews
      parameters:
        - name: maxRating
          description: |
            Filter the reviews
            by the maximum rating
          in: query
          schema:
            type: string
      responses:
        200:
          description: a bunch of reviews
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      pattern: '^[0-9a-fA-F\-]{36}$'
                    message:
                      type: string
                    rating:
                      type: integer
                      minimum: 1
                      maximum: 5
                    userId:
                      type: string
                      pattern: '^[0-9a-fA-F\-]{36}$'
                      nullable: true
    post:
      security:
      - {}
      - MyUserToken: []
      description: Create a new Review
      requestBody:
        content:
          application/json:
            schema:
              properties:
                message:
                  type: string
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                userId:
                  type: string
                  pattern: '^[0-9a-fA-F\-]{36}$'
                  nullable: true
      responses:
          201:
            description: Successfully created a new Review
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: An awesome time for the whole family.
                    rating:
                      type: integer
                      minimum: 1
                      maximum: 5
                      example: 5
                    userId:
                      type: string
                      nullable: true
                      pattern: '[a-zA-Z-.0-9]{36}'
                      example: f7f680a8-d111-421f-b6b3-493ebf905078
                    uuid:
                      type: string
                      pattern: '[a-zA-Z-.0-9]{36}'
                      example: f7f680a8-d111-421f-b6b3-493ebf905078
                    
  /reviews/{reviewId}:
    get:
      description: Get a single review
      parameters:
      - name: reviewId
        in: path
        required: true
        schema:
          type: string
          minLength: 36
          maxLength: 36
          pattern: '[a-zA-Z0-9-]+'
      responses:
        200:
          description: A single review
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An awesome time for the whole family.
                  rating:
                    type: integer
                    minimum: 1
                    maximum: 5
                    example: 5
                  userId:
                    minLength: 36
                    maxLength: 36
                    pattern: '^[a-zA-Z0-9-]+$'
                    nullable: true
                    example: f7f680a8-d111-421f-b6b3-493ebf905078
                  uuid:
                    minLength: 36
                    maxLength: 36
                    pattern: '^[a-zA-Z0-9-]+$'
                    example: f7f680a8-d111-421f-b6b3-493ebf905078
                      
  /users:
    post:
      description: Create a new user
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: ponelat
                password:
                  type: string
                  format: password
                fullName:
                  type: string
                  example: Josh ponelat
      responses:
        '201':
          description: Successfully created a new user
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: ponelat
                  uuid:
                    type: string
                    example: f7f680a8-d111-421f-b6b3-493ebf905078
  /tokens:
    post: 
      description: Create a new token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: ponelat
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: Create a new token for gaining authenticated access to resources
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string




# {
#   "uuid": "98b9aef0-da78-4a93-bb5c-6685306f2dca",
#   "username": "jay",
#   "fullName": "Surapong"
# }

# {
#   "token": "ucLrsESVoU"
# }